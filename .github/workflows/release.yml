name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test ./...

    - name: Build for Linux (amd64)
      run: GOOS=linux GOARCH=amd64 go build -o bin/redfish-server-linux-amd64 cmd/server/main.go

    - name: Build for Linux (arm64)
      run: GOOS=linux GOARCH=arm64 go build -o bin/redfish-server-linux-arm64 cmd/server/main.go

    - name: Build for Windows (amd64)
      run: GOOS=windows GOARCH=amd64 go build -o bin/redfish-server-windows-amd64.exe cmd/server/main.go

    - name: Build for macOS (amd64)
      run: GOOS=darwin GOARCH=amd64 go build -o bin/redfish-server-darwin-amd64 cmd/server/main.go

    - name: Build for macOS (arm64)
      run: GOOS=darwin GOARCH=arm64 go build -o bin/redfish-server-darwin-arm64 cmd/server/main.go

    - name: Create certificates directory
      run: mkdir -p bin/certs

    - name: Generate self-signed certificates
      run: |
        openssl req -x509 -newkey rsa:4096 -keyout bin/certs/server.key -out bin/certs/server.crt -days 365 -nodes -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"

    - name: Create release archives
      run: |
        cd bin
        tar -czf redfish-server-linux-amd64.tar.gz redfish-server-linux-amd64 certs/
        tar -czf redfish-server-linux-arm64.tar.gz redfish-server-linux-arm64 certs/
        zip redfish-server-windows-amd64.zip redfish-server-windows-amd64.exe certs/
        tar -czf redfish-server-darwin-amd64.tar.gz redfish-server-darwin-amd64 certs/
        tar -czf redfish-server-darwin-arm64.tar.gz redfish-server-darwin-arm64 certs/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## Redfish Server ${{ github.ref_name }}

          A fully compliant Redfish server implementation in Go.

          ### Features
          - ✅ Full Redfish Protocol compliance (DSP0266)
          - ✅ Complete Redfish Data Model support (DSP0268)
          - ✅ TLS 1.3 encryption
          - ✅ Session-based authentication
          - ✅ Eventing and task management
          - ✅ OEM extensions support

          ### Downloads
          - Linux (amd64): `redfish-server-linux-amd64.tar.gz`
          - Linux (arm64): `redfish-server-linux-arm64.tar.gz`
          - Windows (amd64): `redfish-server-windows-amd64.zip`
          - macOS (amd64): `redfish-server-darwin-amd64.tar.gz`
          - macOS (arm64): `redfish-server-darwin-arm64.tar.gz`

          ### Quick Start
          ```bash
          # Extract archive
          tar -xzf redfish-server-linux-amd64.tar.gz
          cd redfish-server-linux-amd64

          # Run server
          ./redfish-server-linux-amd64
          ```

          ### Validation
          This release passes all 301 Redfish Protocol Validator tests.

          ### Documentation
          See [README.md](https://github.com/devidasjadhav/go-redfish-server/blob/${{ github.ref_name }}/README.md) for complete documentation.
        files: |
          ./bin/redfish-server-linux-amd64.tar.gz
          ./bin/redfish-server-linux-arm64.tar.gz
          ./bin/redfish-server-windows-amd64.zip
          ./bin/redfish-server-darwin-amd64.tar.gz
          ./bin/redfish-server-darwin-arm64.tar.gz